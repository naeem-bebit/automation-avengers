apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"ingress-nginx","meta.helm.sh/release-namespace":"kube-system"},"creationTimestamp":"2024-08-09T01:16:43Z","finalizers":["service.kubernetes.io/load-balancer-cleanup"],"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.11.1","helm.sh/chart":"ingress-nginx-4.11.1"},"name":"ingress-nginx-controller","namespace":"kube-system","resourceVersion":"879354","uid":"4148a268-d7e3-4416-9695-934271db6103"},"spec":{"allocateLoadBalancerNodePorts":true,"clusterIP":"10.128.109.80","clusterIPs":["10.128.109.80"],"externalTrafficPolicy":"Cluster","internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"prometheus-server","nodePort":31101,"port":9090,"protocol":"TCP","targetPort":9090},{"name":"web-app","nodePort":31100,"port":5000,"protocol":"TCP","targetPort":5000},{"appProtocol":"http","name":"http","nodePort":30097,"port":80,"protocol":"TCP","targetPort":5000},{"appProtocol":"https","name":"https","nodePort":32719,"port":443,"protocol":"TCP","targetPort":5000}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{"ingress":[{"hostname":"143-42-79-129.ip.linodeusercontent.com","ip":"143.42.79.129","ipMode":"VIP"}]}}}
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-08-09T01:16:43Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.11.1
      helm.sh/chart: ingress-nginx-4.11.1
    name: ingress-nginx-controller
    namespace: kube-system
    resourceVersion: "879560"
    uid: 4148a268-d7e3-4416-9695-934271db6103
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.128.109.80
    clusterIPs:
    - 10.128.109.80
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: prometheus-server
      nodePort: 31101
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: web-app
      nodePort: 31100
      port: 5000
      protocol: TCP
      targetPort: 5000
    - appProtocol: http
      name: http
      nodePort: 30097
      port: 80
      protocol: TCP
      targetPort: 5000
    - appProtocol: https
      name: https
      nodePort: 32719
      port: 443
      protocol: TCP
      targetPort: 5000
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: 143-42-79-129.ip.linodeusercontent.com
        ip: 143.42.79.129
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-08-09T01:16:43Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.11.1
      helm.sh/chart: ingress-nginx-4.11.1
    name: ingress-nginx-controller-admission
    namespace: kube-system
    resourceVersion: "630049"
    uid: 5c561756-99fd-45f6-a3fa-2c33b67ac350
  spec:
    clusterIP: 10.128.3.137
    clusterIPs:
    - 10.128.3.137
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"lke.linode.com/caplke-version":"v1.30.3-2024-08a","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"KubeDNS"},"name":"kube-dns","namespace":"kube-system","resourceVersion":"0"},"spec":{"clusterIP":"10.128.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP","targetPort":53},{"name":"dns-tcp","port":53,"protocol":"TCP","targetPort":53},{"name":"metrics","port":9153,"protocol":"TCP","targetPort":9153}],"selector":{"k8s-app":"kube-dns"}}}
      lke.linode.com/caplke-version: v1.30.3-2024-08a
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-07-25T10:27:24Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "566179"
    uid: 25502b7d-fbb8-4f0d-a124-443a5fb673df
  spec:
    clusterIP: 10.128.0.10
    clusterIPs:
    - 10.128.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
